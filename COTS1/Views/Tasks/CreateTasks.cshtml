
@{
    ViewData["Title"] = "Tạo Nhiệm Vụ";
    Layout = "~/Views/Shared/MainLayout.cshtml";
}
<style>
    textarea {
        width: 100%;
        height: 200px;
        margin-top: 10px;
        resize: none;
    }

    .is-invalid {
        border-color: red;
    }
</style>
@if (@TempData["Message"] != null)
{
    <div class="modal" id="myModal">
        <div class="modal-dialog">
            <div class="modal-content">

                <!-- Modal Header -->
                <div class="modal-header">
                    <h4 class="modal-title">Thông báo!!</h4>
                    @* <button type="button" class="btn-close" data-bs-dismiss="modal"></button> *@
                </div>

                <!-- Modal body -->
                <div class="modal-body">
                    @TempData["Message"]
                </div>

                <!-- Modal footer -->
                <div class="modal-footer">
                    <button type="button" class="btn btn-danger" data-bs-dismiss="modal">Close</button>
                </div>

            </div>
        </div>
    </div>
}

<div class="container mt-5" style="margin-left: 230px; margin-top: 70px; padding:50px 40px">
    <h2 class="mb-4">Tạo Nhiệm Vụ Mới</h2>
   
    <form asp-action="CreateTask" method="post" id="taskForm">
        <div class="mb-3">
            <label for="from" class="form-label">From</label>
            <input type="text" class="form-control" id="from" name="from" value="@ViewBag.UserEmail" readonly required />
        </div>
        <div class="mb-3">
            <label for="Title" class="form-label">Tiêu đề</label>
            <input type="text" class="form-control" id="Title" name="Title" required>
        </div>
        <div class="mb-3">
            <label for="Description" class="form-label">Thêm công việc</label>
            <input type="text" class="form-control" id="taskInput" placeholder="Nhập công việc" >
            <button class="btn btn-info" style="margin-top:20px;" id="addTaskBtn">Thêm công việc</button>
        </div>
        <div class="mb-3">
            <label for="Description" class="form-label">Danh sách công việc</label>
            <textarea id="Description" class="editable-textarea" name="Description" readonly></textarea>
            <button class="btn btn-danger" id="editTaskBtn">Chỉnh sửa công việc</button>
        </div>
        <div class="mb-3">
            <label for="DueDate" class="form-label">Ngày hết hạn</label>
            <input type="date" class="form-control" id="DueDate" name="DueDate" required>
        </div>
        <div class="mb-3">
            <label for="Priority" class="form-label">Mức độ ưu tiên</label>
            <select class="form-select" id="Priority" name="Priority" required>
                <option value="Thấp">Thấp</option>
                <option value="Trung Bình">Trung Bình</option>
                <option value="Cao">Cao</option>
            </select>
        </div>
        <div class="mb-3">
            <label for="Recipients" class="form-label">Người nhận</label>
            <input type="email" class="form-control" id="Recipients" name="Recipients" placeholder="Nhập email người nhận, ngăn cách bằng dấu phẩy" required>
        </div>
        <button asp-action="SendEmailTasks" asp-controller="Tasks" type="submit" class="btn btn-primary">Tạo Nhiệm Vụ</button>
    </form>

</div>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/5.3.0/js/bootstrap.bundle.min.js"></script>
<script type="text/javascript">
    document.addEventListener('DOMContentLoaded', function () {
        var myModal = new bootstrap.Modal(document.getElementById('myModal'), {
            keyboard: false
        });
        myModal.show();
    });
   @*  cong viec *@

        let taskCounter = 1;  // Bộ đếm để đánh số công việc
    let isEditing = false; // Trạng thái chỉnh sửa

    document.getElementById('addTaskBtn').addEventListener('click', function () {
        // Lấy giá trị từ ô input
        const taskInput = document.getElementById('taskInput').value.trim();

        // Kiểm tra giá trị input
        if (!taskInput) {
            alert('Vui lòng nhập công việc.');
            return;
        }

        // Chuẩn bị chuỗi công việc mới
        const newTask = `Công việc ${taskCounter}: ${taskInput}\n`;

        // Lấy nội dung hiện tại của textarea
        const Description = document.getElementById('Description');

        // Thêm công việc mới vào textarea
        Description.value += newTask;

        // Tăng số thứ tự công việc
        taskCounter++;

        // Xóa nội dung trong ô input sau khi thêm
        document.getElementById('taskInput').value = '';
    });

    document.getElementById('editTaskBtn').addEventListener('click', function () {
        const Description = document.getElementById('Description');

        if (isEditing) {
            // Nếu đang trong chế độ chỉnh sửa thì khóa lại textarea
            Description.setAttribute('readonly', true);
            isEditing = false;
            this.innerText = 'Chỉnh sửa công việc'; // Thay đổi lại tên nút
        } else {
            // Nếu không trong chế độ chỉnh sửa thì cho phép chỉnh sửa
            Description.removeAttribute('readonly');
            isEditing = true;
            this.innerText = 'Lưu công việc'; // Đổi tên nút thành Lưu công việc
        }
    });

    // Thêm kiểm tra form khi gửi
    document.getElementById('taskForm').addEventListener('submit', function (event) {
        const requiredFields = ['Title', 'DueDate', 'Priority', 'Recipients'];
        let valid = true;

        requiredFields.forEach(id => {
            const field = document.getElementById(id);
            if (!field.value) {
                field.classList.add('is-invalid');
                valid = false;
            } else {
                field.classList.remove('is-invalid');
            }
        });

        if (!valid) {
            event.preventDefault(); // Ngăn gửi form nếu có trường không hợp lệ
        }
    });
    document.getElementById('Description').addEventListener('input', function () {
        const Description = document.getElementById('Description');
        if (Description.value.trim() === '') {
            taskCounter = 1; // Reset counter về 1 nếu nội dung textarea bị xóa hết
        }
    });
</script>
