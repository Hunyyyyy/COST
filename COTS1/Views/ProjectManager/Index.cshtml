@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/MainLayout.cshtml";

}
@model List<COTS1.Models.ProjectModel>

<style>
    /* Ensure the dropdown is positioned correctly */
    .dropdown {
        position: absolute;
        display: none;
    }
</style>
@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        @TempData["ErrorMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

@if (TempData["WarningMessage"] != null)
{
    <div class="alert alert-warning alert-dismissible fade show" role="alert">
        @TempData["WarningMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

@if (TempData["InfoMessage"] != null)
{
    <div class="alert alert-info alert-dismissible fade show" role="alert">
        @TempData["InfoMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}
@{

}

<div style="margin-left: 230px; margin-top: 60px;">
<<<<<<< HEAD

=======
    
>>>>>>> 703f596acaadb5b2aac6f76d9b104b12d7fc423d
    <!-- Nút "Tạo dự án mới" được di chuyển lên trên bảng -->
    <button style="float:right;margin-right:20px;margin-bottom:20px" data-modal-target="large-modal" data-modal-toggle="large-modal" type="button" class="px-6 py-3.5 text-base font-medium text-white inline-flex items-center bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 rounded-lg text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800">
        <svg class="w-4 h-4 text-white me-2" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 20 20">
            <path d="M10 4a.5.5 0 0 1 .5.5V9h4.5a.5.5 0 0 1 0 1H10.5V14a.5.5 0 0 1-1 0V10H4a.5.5 0 0 1 0-1h5.5V4.5A.5.5 0 0 1 10 4z" />
        </svg>
        Tạo dự án mới
    </button>

    <!-- Modal -->
    <div id="large-modal" tabindex="-1" class="fixed top-0 left-0 right-0 z-50 hidden w-full p-4 overflow-x-hidden overflow-y-auto md:inset-0 h-[calc(100%-1rem)] max-h-full bg-gray-100 h-screen flex items-center justify-center">
        <div class="relative w-full max-w-4xl max-h-full">
            <!-- Modal content -->
            <div class="relative bg-white rounded-lg shadow dark:bg-gray-700">
                <!-- Modal header -->
                <div class="flex items-center justify-between p-4 md:p-5 border-b rounded-t dark:border-gray-600">
                    <h3 class="text-xl font-medium text-gray-900 dark:text-white">
                        Tạo dự án mới
                    </h3>
<button type="button" class="text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 ms-auto inline-flex justify-center items-center dark:hover:bg-gray-600 dark:hover:text-white" data-modal-hide="large-modal">
                        <svg class="w-3 h-3" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 14 14">
                            <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6" />
                        </svg>
                        <span class="sr-only">Close modal</span>
                    </button>
                </div>
                <!-- Modal body -->
                <form method="post">
                    <div class="p-4 md:p-5 space-y-4">
                        <div class="mb-6">
                            <label for="large-input" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Tên dự án</label>
                            <input id="nameproject" name="NameProject" placeholder="Nhập tên dự án" type="text" id="large-input" class="block w-full p-4 text-gray-900 border border-gray-300 rounded-lg bg-gray-50 text-base focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500">
                        </div>
                    </div>
                    <!-- Modal footer -->
                    <div class="flex items-center p-4 md:p-5 space-x-3 rtl:space-x-reverse border-t border-gray-200 rounded-b dark:border-gray-600">
                        <button asp-action="CreateProject" asp-controller="ProjectManager" data-modal-hide="large-modal" type="submit" class="text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800">Tạo</button>
                        <button data-modal-hide="large-modal" type="button" class="py-2.5 px-5 ms-3 text-sm font-medium text-gray-900 focus:outline-none bg-white rounded-lg border border-gray-200 hover:bg-gray-100 hover:text-blue-700 focus:z-10 focus:ring-4 focus:ring-gray-100 dark:focus:ring-gray-700 dark:bg-gray-800 dark:text-gray-400 dark:border-gray-600 dark:hover:text-white dark:hover:bg-gray-700">Hủy</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
    <table class="table table-dark table-hover">
        <thead>
            <tr>
                <th>Project ID</th>
                <th>Project name</th>
                <th>Create At</th>
                <th>Status</th>
                <th>Actions</th> <!-- Thêm cột cho các hành động -->
            </tr>
        </thead>
        <tbody>
            @if (Model != null && Model.Any())
            {
                @foreach (var item in Model)
                {
                    <tr data-id="@item.ProjectId" class="clickable-row" style="cursor:pointer">
                        <td>@item.ProjectId</td>
                        <td>@item.ProjectName</td>
                        <td>@item.CreatedAt</td>
                        <td>@item.Status</td>
                        @if (ViewBag.IsManager == true)
                        {
                            <td>
                                <div class="btn-group" role="group">
                                    <!-- Nút đổi tên -->
                                    <form asp-action="RenameProject" asp-controller="ProjectManager" method="get" class="d-inline">
                                        <button type="button" class="btn btn-warning btn-sm"
                                                data-bs-toggle="modal"
                                                data-bs-target="#renameModal"
                                                onclick="setRenameModalValues('@item.ProjectId', '@item.ProjectName')">
                                            Đổi tên
                                        </button>
                                    </form>

                                    <!-- Nút xóa -->
                                    <form asp-action="DeleteProject" asp-controller="ProjectManager" method="post" class="d-inline ms-2" onsubmit="return confirm('Bạn có chắc chắn muốn xóa dự án này không?');">
                                        <input type="hidden" name="projectId" value="@item.ProjectId" />
                                        <button type="submit" class="btn btn-danger btn-sm">Xóa</button>
                                    </form>
                                </div>
                            </td>
                        }
                        else
                        {
                            <td>
                                <div class="btn-group" role="group">
                                    <button type="button" class="btn btn-warning btn-sm" disabled>Đổi tên</button>
                                    <button type="button" class="btn btn-warning btn-sm" disabled>Xóa</button>
                                </div>
                            </td>
                        }

                    </tr>
                }
            }
        </tbody>
    </table>

</div>

<!-- Modal Đổi Tên Dự Án -->
<div class="modal fade" id="renameModal" tabindex="-1" aria-labelledby="renameModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="renameModalLabel">Đổi Tên Dự Án</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="renameForm" method="post" action="/Project/RenameProject">
                    <input type="hidden" id="renameProjectId" name="projectId" />
                    <div class="mb-3">
                        <label for="newProjectName" class="form-label">Tên dự án mới</label>
                        <input type="text" class="form-control" id="newProjectName" name="newProjectName" required />
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
                        <button type="submit" class="btn btn-primary">Lưu thay đổi</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<script>
    function setRenameModalValues(projectId, projectName) {
        // Điền giá trị vào các trường trong modal
        document.getElementById('renameProjectId').value = projectId;
        document.getElementById('newProjectName').value = projectName;
    }
</script>






<script>
    document.addEventListener('DOMContentLoaded', function () {
        const modal = document.getElementById('large-modal');
        const openModalButtons = document.querySelectorAll('[data-modal-target]');
        const closeModalButtons = document.querySelectorAll('[data-modal-hide]');

        openModalButtons.forEach(button => {
            button.addEventListener('click', () => {
                modal.classList.remove('hidden');
            });
        });

        closeModalButtons.forEach(button => {
            button.addEventListener('click', () => {
                modal.classList.add('hidden');
            });
        });
    });
    document.addEventListener('DOMContentLoaded', (event) => {
        // Lấy tất cả các hàng có class "clickable-row"
        const rows = document.querySelectorAll('.clickable-row');

        rows.forEach(row => {
            row.addEventListener('click', (event) => {
                // Kiểm tra xem phần tử được nhấn không phải là một nút
                if (!event.target.closest('button') && !event.target.closest('a')) {
                    // Lấy ID từ thuộc tính data-id
                    const projectId = row.getAttribute('data-id');
                    if (projectId) { // Kiểm tra xem projectId có tồn tại
                        window.location.href = `@Url.Action("CreateTaskProject", "ProjectManager")?projectId=${projectId}`;
                    }
                }
            });
        });
    });

</script>

<script src="https://cdn.tailwindcss.com"></script>